@model Nop.Web.Models.Catalog.SearchModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Search").Text);
    //page class
    Html.AppendPageCssClassParts("html-search-page");
}
<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        $("#@Html.IdFor(model => model.adv)").click(toggleAdvancedSearch);
        toggleAdvancedSearch();
    });
    function toggleAdvancedSearch() {
        if ($('#@Html.IdFor(model => model.adv)').is(':checked')) {
            $('#advanced-search-block').show();
        }
        else {
            $('#advanced-search-block').hide();
        }
    }
</script>
<div class="page search-page">
    <div class="page-title">
        <h3>@T("Search")</h3>
    </div>
    <div class="page-body">
        <div class="search-input">
            <form asp-route="ProductSearch" method="get">
                <div class="fieldset">
                    <div class="form-fields">
                        <div class="basic-search">
                            <div class="form-group row">
                                <div class="col-md-3 col-sm-4"> <label asp-for="q">@T("Search.SearchTerm"):</label></div>
                                <div class="col-md-9 col-sm-8"> <input asp-for="q" class="search-text form-control" /> </div>
                            </div>
                            @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_basic" })
                            <div class="form-group row reversed">
                                <div class="col-md-offset-3 col-sm-offset-4 col-md-9">
                                    <input asp-for="adv" />
                                    <label asp-for="adv">@T("Search.AdvancedSearch")</label>
                               </div>
                            </div>
                        </div>
                        <div class="advanced-search" id="advanced-search-block">
                            @if (Model.AvailableCategories.Count > 0)
                            {
                                <div class="form-group row">
                                    <div class="col-md-3 col-sm-4"> <label asp-for="cid">@T("Search.Category"):</label></div>
                                    <div class="col-md-9 col-sm-8"> <select asp-for="cid" asp-items="Model.AvailableCategories" class="form-control"></select></div>
                                </div>
                                <div class="form-group row reversed">
                                    <div class="col-md-offset-3 col-sm-offset-4 col-md-9">
                                        <input asp-for="isc" />
                                        <label asp-for="isc">@T("Search.IncludeSubCategories")</label>
                                    </div>
                                 </div>
                            }
                            @if (Model.AvailableManufacturers.Count > 0)
                            {
                                <div class="form-group row">
                                    <div class="col-md-3 col-sm-4"> <label asp-for="mid">@T("Search.Manufacturer"):</label></div>
                                    <div class="col-md-9 col-sm-8"> <select asp-for="mid" asp-items="Model.AvailableManufacturers" class="form-control"></select></div>
                                </div>
                            }
                            @if (Model.asv && Model.AvailableVendors.Count > 0)
                            {
                                <div class="form-group row">
                                    <div class="col-md-3 col-sm-4"> <label asp-for="vid">@T("Search.Vendor"):</label></div>
                                    <div class="col-md-9 col-sm-8"> <select asp-for="vid" asp-items="Model.AvailableVendors" class="form-control"></select></div>
                                </div>
                            }
                            <div class="form-group row">
                                <div class="col-md-3 col-sm-4"><label>@T("Search.PriceRange"):</label></div>
                                <div class="col-md-9 col-sm-8">
                                <div class="price-range row">
                                    <div class="col-md-1"> @T("Search.PriceRange.From") </div>
                                    <div class="col-md-3"><input asp-for="pf" class="price-from form-control" /> </div>
                                    <div class="col-md-1"> @T("Search.PriceRange.To") </div>
                                    <div class="col-md-3"> <input asp-for="pt" class="price-to form-control" /> </div>
                                </div>
                                </div>
                            </div>
                            <div class="form-group row reversed">
                              <div class="col-md-offset-3 col-sm-offset-4 col-md-9">
                                    <input asp-for="sid" />
                                    <label asp-for="sid">@T("Search.SearchInDescriptions")</label></div>
                              </div>
                            @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_advanced" })
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                 <div class="col-md-offset-3 col-sm-offset-4 col-md-9">
                  <div class="buttons">
                    <input type="submit" class="button-1 btn btn-default search-button" value="@T("Search.Button")" />
                  </div>
                 </div>
               </div>  
            </form>
        </div>
        @if (Model.Products.Count > 0)
        {
            @await Html.PartialAsync("_CatalogSelectors", Model.PagingFilteringContext)
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_before_results" })
        <div class="search-results">
            @if (!string.IsNullOrEmpty(Model.Warning))
            {
                <div class="warning">
                    @Model.Warning
                </div>
            }
            @if (Model.NoResults)
            {
                <div class="no-result">
                    @T("Search.NoResultsText")
                </div>
            }

            @if (Model.Products.Count > 0)
            {
                <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
                    <div class="item-grid">
                        @foreach (var product in Model.Products)
                        {
                            <div class="item-box">
                                @await Html.PartialAsync("_ProductBox", product)
                            </div>
                        }
                    </div>
                </div>
            }
            @{
                var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber").BooleanParameterName("adv").BooleanParameterName("isc").BooleanParameterName("sid").RenderEmptyParameters(true);
            }
            @if (!pager.IsEmpty())
            {
                <div class="pager">
                    @pager
                </div>
            }
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = "productsearch_page_after_results" })
    </div>
</div>
