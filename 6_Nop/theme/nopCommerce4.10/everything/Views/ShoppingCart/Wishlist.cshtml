@model WishlistModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWebHelper webHelper
@inject IWorkContext workContext
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Wishlist").Text);
    //page class
    Html.AppendPageCssClassParts("html-wishlist-page");

}
<div class="order-summary-content">
<div class="onepageview">
 <div class="container">
<div class="page wishlist-page">
   <div class="page-title">
       <h3>
           @if (Model.IsEditable)
           {
               @T("Wishlist")
           }
           else
           {
               @string.Format(T("Wishlist.WishlistOf").Text, Model.CustomerFullname)
           }
       </h3>
   </div>
   <div class="page-body"> 
       @if (Model.Items.Count > 0)
       {
           <div class="wishlist-content">
               @if (Model.Warnings.Count > 0)
               {
                   <div class="message-error alert alert-danger">
                       <ul>
                           @foreach (var warning in Model.Warnings)
                           {
                               <li>@warning</li>
                           }
                       </ul>
                   </div>
               }
               <form asp-route="Wishlist" method="post">
                   <div class="table-wrapper">
                       <table class="cart table table-bordered table-hover">
                           <thead>
                               <tr>
                                   @if (Model.IsEditable)
                                   {
                                       <th width="5%" class="remove-from-cart">
                                           @T("ShoppingCart.Remove")
                                       </th>
                                   }
                                   @if (Model.DisplayAddToCart)
                                   {
                                       <th width="12%" class="add-to-cart">
                                           @T("ShoppingCart.AddToCart")
                                       </th>
                                   }
                                   @if (Model.ShowSku)
                                   {
                                       <th width="8%" class="sku">
                                           @T("ShoppingCart.SKU")
                                       </th>
                                   }
                                   @if (Model.ShowProductImages)
                                   {
                                       <th width="8%" class="product-picture">
                                           @T("ShoppingCart.Image")
                                       </th>
                                   }
                                   <th width="45%" class="product">
                                       @T("ShoppingCart.Product(s)")
                                   </th>
                                   <th width="10%" class="unit-price">
                                       @T("ShoppingCart.UnitPrice")
                                   </th>
                                   <th width="10%" class="quantity">
                                       @T("ShoppingCart.Quantity")
                                   </th>
                                   <th width="10%" class="subtotal">
                                       @T("ShoppingCart.ItemTotal")
                                   </th>
                               </tr>
                           </thead>
                           <tbody>
                               @foreach (var item in Model.Items)
                               {
                                   <tr>
                                       @if (Model.IsEditable)
                                       {
                                           <td class="remove-from-cart">
                                               <div class="custom-control custom-checkbox">
                                                   <input class="custom-control-input" type="checkbox" name="removefromcart" value="@(item.Id)" id="@(item.Id)" />
                                                   <label class="custom-control-label cart-text" for="@(item.Id)"> @T("ShoppingCart.Remove") </label>
                                               </div>
                                           </td>
                                       }
                                       @if (Model.DisplayAddToCart)
                                       {
                                           <td class="add-to-cart">
                                                <div class="custom-control custom-checkbox">
                                                    <input class="custom-control-input" id="a-@(item.Id)" type="checkbox" name="addtocart" value="@(item.Id)" />
                                                    <label class="custom-control-label cart-text" for="a-@(item.Id)"> @T("ShoppingCart.AddToCart") </label>
                                                </div>
                                            </td>
                                       }
                                       @if (Model.ShowSku)
                                       {
                                           <td class="sku">                                               
                                               <span class="sku-number">@item.Sku</span>
                                           </td>
                                       }
                                       @if (Model.ShowProductImages)
                                       {
                                           <td class="product-picture">
                                               <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                                           </td>
                                       }
                                           <td class="product">
                                               <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" class="product-name">@item.ProductName</a>
                                               @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                               {
                                                   <div class="attributes">
                                                       @Html.Raw(item.AttributeInfo)
                                                   </div>
                                               }
                                               @if (!string.IsNullOrEmpty(item.RecurringInfo))
                                               {
                                                   <div class="recurring-info">
                                                       @Html.Raw(item.RecurringInfo)
                                                   </div>
                                               }
                                               @if (!string.IsNullOrEmpty(item.RentalInfo))
                                               {
                                                   <div class="rental-info">
                                                       @Html.Raw(item.RentalInfo)
                                                   </div>
                                               }
                                               @if (Model.IsEditable && item.AllowItemEditing)
                                               {
                                                   var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName }, webHelper.CurrentRequestProtocol);
                                                   editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid", item.Id.ToString());
                                                   <div class="edit-item">
                                                       <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                                   </div>
                                               }
                                               @if (item.Warnings.Count > 0)
                                               {
                                                   <div class="message-error alert alert-danger">
                                                       <ul>
                                                           @foreach (var warning in item.Warnings)
                                                           {
                                                               <li>@warning</li>
                                                           }
                                                       </ul>
                                                   </div>
                                               }
                                           </td>
                                       <td class="unit-price">                                           
                                           <span class="product-unit-price">@item.UnitPrice</span>
                                       </td>
                                       <td class="quantity">                                           
                                           @if (Model.IsEditable)
                                           {
                                               if (item.AllowedQuantities.Count > 0)
                                               {
                                                   <select name="itemquantity@(item.Id)" class="qty-dropdown form-control custom-select">
                                                       @foreach (var qty in item.AllowedQuantities)
                                                       {
                                                           <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                       }
                                                   </select>
                                               }
                                               else
                                               {
                                                   <input name="itemquantity@(item.Id)" type="text" value="@(item.Quantity)" class="qty-input form-control"/>
                                               }
                                           }
                                           else
                                           {
                                                <span class="product-quantity">@item.Quantity</span>
                                           }
                                       </td>
                                       <td class="subtotal">                                           
                                           <span class="product-subtotal">@item.SubTotal</span>
                                           @if (!string.IsNullOrEmpty(item.Discount))
                                           {
                                               <div class="discount">
                                                   @T("ShoppingCart.ItemYouSave", item.Discount)
                                               </div>
                                               if (item.MaximumDiscountedQty.HasValue)
                                               {
                                                   <div class="discount-additional-info">
                                                       @T("ShoppingCart.MaximumDiscountedQty", item.MaximumDiscountedQty.Value)
                                                   </div>
                                               }
                                           }
                                       </td>
                                   </tr>
                               }
                           </tbody>
                       </table>
                   </div>
                   @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                   {
                       var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                       //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                       //of course, you can modify appropriate locales to include VAT info there
                    <div class="tax-shipping-info">
                        @T(inclTax ? "Wishlist.TaxShipping.InclTax" : "Wishlist.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </div>
                   }
                   <div class="buttons">
                       @if (Model.IsEditable)
                       {
                           <input type="submit" name="updatecart" value="@T("Wishlist.UpdateCart")" class="btn btn-secondary update-wishlist-button" />
                       }
                       @if (Model.DisplayAddToCart)
                       {
                           <input type="submit" name="addtocartbutton" value="@T("ShoppingCart.AddToCart")" class="btn btn-default wishlist-add-to-cart-button" />
                       }
                       @if (Model.IsEditable && Model.EmailWishlistEnabled)
                       {
                           <input type="button" value="@T("Wishlist.EmailAFriend")" class="btn btn-secondary email-a-friend-wishlist-button" onclick="setLocation('@Url.RouteUrl("EmailWishlist")')" />
                       }
                   </div>
              </form>
           </div>
       }
       else
       {
           <div class="no-data">
               <div class="alert alert-danger">
                   @T("Wishlist.CartIsEmpty")
               </div>
           </div>
       }
       @if (Model.IsEditable && Model.Items.Count > 0)
       {
           <div class="share-info">
               <span class="share-label">@T("Wishlist.YourWishlistURL"):</span>
               <a href="@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid })" class="share-link">@Url.RouteUrl("Wishlist", new { customerGuid = Model.CustomerGuid }, "http")</a>
           </div>
       }
   </div>
</div>
</div><br/><br/>
</div>
</div>