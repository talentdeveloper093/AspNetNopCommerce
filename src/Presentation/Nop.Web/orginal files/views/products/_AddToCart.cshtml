@model ProductDetailsModel.AddToCartModel
@using Nop.Web.Models.Catalog;
@using Nop.Core.Domain.Orders;
<style>
    .CustomBtnStyling {
        border: none;
        background-color: #4ab2f1;
        padding: 10px 10px;
        margin: 2px;
        text-align: center;
        font-size: 15px;
        color: #fff;
        text-transform: uppercase;
    }

    .MakeOfferbtnClr
    {
        background-color: #414C89 !important;
    }
</style>
@if (Model.UpdatedShoppingCartItemId > 0)
{
    @Html.HiddenFor(x => x.UpdatedShoppingCartItemId)
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
<div class="add-to-cart">
    @if (Model.CustomerEntersPrice)
    {
        <div class="customer-entered-price">
            <div class="price-input">
                @Html.LabelFor(model => model.CustomerEnteredPrice, new { @class = "enter-price-label" }, ":")
                @*round price*@
                @Html.TextBox("CustomerEnteredPrice", Convert.ToInt32(Math.Ceiling(Model.CustomerEnteredPrice)), new { @class = "enter-price-input" })
            </div>
            <div class="price-range">
                @Model.CustomerEnteredPriceRange
            </div>
        </div>
    }
    @if (!String.IsNullOrEmpty(Model.MinimumQuantityNotification))
    {
        <div class="min-qty-notification">@Model.MinimumQuantityNotification</div>
    }
    @if (!Model.DisableBuyButton)
    {
        <div class="add-to-cart-panel">
            @Html.LabelFor(model => model.EnteredQuantity, new { @class = "qty-label" }, ":")
            @if (Model.AllowedQuantities.Count > 0)
            {
                @Html.DropDownListFor(model => model.EnteredQuantity, Model.AllowedQuantities, new { @class = "qty-dropdown" })
            }
            else
            {
            <div class="row">
                <div class="col-lg-12">
                    @Html.TextBoxFor(model => model.EnteredQuantity, new { @class = "qty-input", style = "width:620px" })
                </div>
            </div>
                <br />
                //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                <script type="text/javascript">
                        $(document).ready(function () {
                            $("#@Html.FieldIdFor(model => model.EnteredQuantity)").keydown(function (event) {
                                if (event.keyCode == 13) {
                                    $("#add-to-cart-button-@Model.ProductId").click();
                                    return false;
                                }
                            });
                        });
                </script>
            }
            @{
                var addToCartText = "";
                if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
                {
                    addToCartText = T("ShoppingCart.AddToCart.Update").Text;
                }
                else
                {
                    addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                }
                <br />
                <br />

            }
        </div>
        <div class="row">
            <div class="col-lg-12">
                <input type="button" id="add-to-cart-button-@Model.ProductId" style="width:100%;border-bottom-left-radius:20%;border-top-left-radius:20%;border-bottom-right-radius:20%;border-top-right-radius:20%;background-color:black" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" />
            </div>
        </div>
        <br />

        if (Model.IsMakeOffer)
        {
            <div class="add-to-cart-panel">

                @{

                    <input type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button MakeOfferbtnClr" value="Make Offer" data-productid="@Model.ProductId" onclick="AjaxCart.OpenOfferPopup(@Model.ProductId);return false;" />
                }
            </div>
        }


    }
    @Html.Widget("productdetails_add_info", Model.ProductId)
</div>
}


<div id="OfferModal" title="Make Offer" style="display: none;">
    <input type="hidden" id="hiddenproductid" />
    <p>Your Price:</p>
    <p> <input type="number" id="OfferModaltxtbx" /></p>
    <p>Notes for Seller:</p>
    <p>
        <textarea cols="19" rows="7" style="min-height:50px;" id="messagetosellerbx"></textarea>
    </p>
    <p>
        <button class="CustomBtnStyling" onclick="AjaxCart.Submitoffer('@Url.RouteUrl("SubmitOffer")');return false;">Submit</button>
    </p>
</div>
